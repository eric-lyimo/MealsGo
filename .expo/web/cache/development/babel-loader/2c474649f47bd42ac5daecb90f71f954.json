{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Apps\\\\App.js\";\n\nimport { StatusBar as ExpoStatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ThemeProvider } from \"styled-components/native\";\nimport { theme } from \"./src/infrastructure/theme\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { RestaurantsScreen } from \"./src/features/restaurants/screens/restaurants.screen\";\nimport { SafeArea } from \"./src/utils/safe-area.component\";\nimport { Ionicons } from \"@expo/vector-icons\";\nAppRegistry.registerComponent('main', function () {\n  return withExpoRoot(component);\n});\n\nif (Platform.OS === 'web') {\n  var _document$getElementB;\n\n  var rootTag = (_document$getElementB = document.getElementById('root')) != null ? _document$getElementB : document.getElementById('main');\n  AppRegistry.runApplication('main', {\n    rootTag: rootTag\n  });\n}\n\nvar Tab = createBottomTabNavigator();\n\nvar SettingScreen = function SettingScreen() {\n  return React.createElement(SafeArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, \"setting\"));\n};\n\nvar MapScreen = function MapScreen() {\n  return React.createElement(SafeArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \"map\"));\n};\n\nexport default function App() {\n  var _this2 = this;\n\n  return React.createElement(React.Fragment, null, React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Restaurants\") {\n            iconName = \"md-restaurant\";\n          } else if (route.name === \"Setting\") {\n            iconName = \"md-settings\";\n          } else if (route.name === \"Map\") {\n            iconName = \"md-map\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"tomato\",\n      inactiveTintColor: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Restaurants\",\n    component: RestaurantsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Map\",\n    component: MapScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Setting\",\n    component: SettingScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }\n  })))), React.createElement(ExpoStatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/Apps/App.js"],"names":["StatusBar","ExpoStatusBar","React","ThemeProvider","theme","NavigationContainer","createBottomTabNavigator","RestaurantsScreen","SafeArea","Ionicons","AppRegistry","registerComponent","withExpoRoot","component","Platform","OS","rootTag","document","getElementById","runApplication","Tab","SettingScreen","MapScreen","App","route","tabBarIcon","color","size","iconName","name","activeTintColor","inactiveTintColor"],"mappings":"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","sourcesContent":["import { StatusBar as ExpoStatusBar } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport {Text,Platform} from \"react-native\"\r\nimport { ThemeProvider } from \"styled-components/native\";\r\nimport {theme} from \"./src/infrastructure/theme\"\r\nimport {NavigationContainer} from \"@react-navigation/native\"\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\"\r\nimport { RestaurantsScreen } from \"./src/features/restaurants/screens/restaurants.screen\";\r\nimport {SafeArea} from \"./src/utils/safe-area.component\"\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nAppRegistry.registerComponent('main', () => withExpoRoot(component));\r\n   if (Platform.OS === 'web') {\r\n     const rootTag = document.getElementById('root') ?? document.getElementById('main');\r\n    AppRegistry.runApplication('main', { rootTag });\r\n  }\r\n\r\nconst Tab =createBottomTabNavigator()\r\n\r\nconst SettingScreen =() =>(\r\n<SafeArea> \r\n  <Text >setting</Text>\r\n</SafeArea>\r\n)\r\nconst MapScreen = ()=> (\r\n<SafeArea>\r\n    <Text>map</Text>\r\n  </SafeArea>\r\n  )\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n    <ThemeProvider theme={theme}>\r\n       <NavigationContainer>\r\n         <Tab.Navigator\r\n         screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ color, size }) => {\r\n            let iconName;\r\n\r\n            if (route.name === \"Restaurants\") {\r\n              iconName = \"md-restaurant\";\r\n            } else if (route.name === \"Setting\") {\r\n              iconName = \"md-settings\";\r\n            } else if (route.name === \"Map\") {\r\n              iconName = \"md-map\";\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n        })}\r\n        tabBarOptions={{\r\n          activeTintColor: \"tomato\",\r\n          inactiveTintColor: \"gray\",\r\n        }}>\r\n           <Tab.Screen name=\"Restaurants\" component={RestaurantsScreen}/>\r\n           <Tab.Screen name=\"Map\" component={MapScreen}/>\r\n           <Tab.Screen name=\"Setting\" component={SettingScreen}/>\r\n         </Tab.Navigator>\r\n       </NavigationContainer>\r\n    </ThemeProvider>\r\n      <ExpoStatusBar style=\"auto\" />\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}